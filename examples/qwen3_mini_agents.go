// Qwen3 Mini-Agents Swarm - Generated by Breeze AI
// Demonstrates 10 specialized mini-agents using qwen3:1.7b model
// Each agent has a unique personality and expertise area

package main

import (
	"fmt"
	"strings"
	"time"

	"github.com/user/breeze"
)

func runQwen3MiniAgentsDemo() {
	fmt.Println("üß† === Qwen3 Mini-Agents Swarm Demo ===")
	fmt.Println("Using 10 specialized qwen3:1.7b agents for collaborative problem solving\n")

	// Define 10 specialized mini-agents
	agents := []breeze.Agent{
		{
			Name:        "Ada",
			Role:        "Logic Analyst",
			Expertise:   "mathematical reasoning and pattern recognition",
			Personality: "precise, methodical, and detail-oriented",
		},
		{
			Name:        "Byte",
			Role:        "Code Architect",
			Expertise:   "software design and algorithm optimization",
			Personality: "innovative, efficient, and forward-thinking",
		},
		{
			Name:        "Cache",
			Role:        "Memory Specialist",
			Expertise:   "data structures and memory management",
			Personality: "organized, reliable, and systematic",
		},
		{
			Name:        "Data",
			Role:        "Information Processor",
			Expertise:   "data analysis and statistical modeling",
			Personality: "analytical, thorough, and data-driven",
		},
		{
			Name:        "Echo",
			Role:        "Communication Expert",
			Expertise:   "clear communication and user experience",
			Personality: "empathetic, clear, and user-focused",
		},
		{
			Name:        "Flux",
			Role:        "Innovation Catalyst",
			Expertise:   "creative problem solving and breakthrough ideas",
			Personality: "bold, creative, and boundary-pushing",
		},
		{
			Name:        "Grid",
			Role:        "System Integrator",
			Expertise:   "system architecture and integration",
			Personality: "holistic, connective, and strategic",
		},
		{
			Name:        "Hash",
			Role:        "Security Guardian",
			Expertise:   "security analysis and risk assessment",
			Personality: "vigilant, protective, and cautious",
		},
		{
			Name:        "Ion",
			Role:        "Performance Optimizer",
			Expertise:   "performance tuning and optimization",
			Personality: "focused, efficient, and results-driven",
		},
		{
			Name:        "Jax",
			Role:        "Quality Assurance",
			Expertise:   "testing, validation, and quality control",
			Personality: "meticulous, thorough, and perfectionist",
		},
	}

	// Define collaborative phases
	phases := []breeze.Phase{
		{
			Name:           "Problem Analysis",
			Description:    "Each agent analyzes the problem from their unique perspective",
			PromptTemplate: "Analyze this challenge from your specialized viewpoint. What unique insights can you bring to this problem?",
			IsParallel:     true,
			MaxConcurrency: 10,
		},
		{
			Name:           "Solution Brainstorming",
			Description:    "Agents generate creative solutions using shared knowledge",
			PromptTemplate: "Based on the analysis and considering insights from other agents, propose innovative solutions to this challenge.",
			IsParallel:     true,
			MaxConcurrency: 10,
		},
		{
			Name:           "Solution Integration",
			Description:    "Agents work together to combine and refine solutions",
			PromptTemplate: "Review all proposed solutions and create an integrated, comprehensive approach that leverages the strengths of each perspective.",
			IsParallel:     true,
			MaxConcurrency: 10,
		},
		{
			Name:           "Implementation Planning",
			Description:    "Final phase: Create actionable implementation steps",
			PromptTemplate: "Develop a detailed implementation plan with specific, actionable steps that can be executed immediately.",
			IsParallel:     false,
			MaxConcurrency: 5,
		},
	}

	// The collaborative challenge
	challenge := `Design and implement a revolutionary personal knowledge management system that can:

1. Automatically organize and connect ideas across different domains
2. Learn user preferences and adapt its organization strategies
3. Provide intelligent search and discovery of related concepts
4. Support creative ideation by suggesting novel connections
5. Maintain privacy and security while enabling seamless sharing
6. Scale from individual use to team collaboration
7. Integrate with existing tools and workflows
8. Provide real-time insights and analytics about knowledge patterns

The system should be innovative, user-friendly, and technically feasible with current technology.`

	fmt.Printf("üéØ Challenge: %s\n\n", challenge)

	// Create collaboration with qwen3:1.7b model
	collab := breeze.NewCollaboration(agents, phases)

	// Add progress tracking
	collab.OnPhaseComplete = func(phaseName string, results map[string]string) {
		fmt.Printf("\n‚úÖ Phase '%s' completed with %d agent contributions!\n", phaseName, len(results))
		fmt.Println(strings.Repeat("‚îÄ", 60))
	}

	collab.OnAgentResponse = func(agentName, response string) {
		fmt.Printf("ü§ñ %s contributed (%d chars)\n", agentName, len(response))
	}

	// Execute the collaboration
	fmt.Println("üöÄ Starting Qwen3 Mini-Agents Swarm...")
	startTime := time.Now()

	results, err := collab.Run(challenge)
	if err != nil {
		fmt.Printf("‚ùå Collaboration failed: %v\n", err)
		return
	}

	duration := time.Since(startTime)
	fmt.Printf("\n‚è±Ô∏è  Total collaboration time: %.2f seconds\n", duration.Seconds())

	// Display final results
	fmt.Println("\n" + strings.Repeat("‚ïê", 80))
	fmt.Println("üéä QWEN3 MINI-AGENTS SWARM COMPLETE!")
	fmt.Println("10 specialized agents have collaboratively designed a knowledge management system")
	fmt.Println(strings.Repeat("‚ïê", 80))

	for phaseName, phaseResults := range results {
		fmt.Printf("\nüìã PHASE: %s\n", phaseName)
		fmt.Println(strings.Repeat("‚îÄ", 40))

		for agentName, response := range phaseResults {
			fmt.Printf("\nü§ñ **%s** (%s):\n", agentName, getAgentRole(agents, agentName))
			// Show first 200 characters of each response
			if len(response) > 200 {
				fmt.Printf("%s...\n", response[:200])
			} else {
				fmt.Println(response)
			}
		}
	}

	fmt.Println("\n" + strings.Repeat("‚ïê", 80))
	fmt.Println("üí° Key Insights from the Swarm:")
	fmt.Println("‚Ä¢ Each agent brought unique expertise to the problem")
	fmt.Println("‚Ä¢ Parallel processing enabled rapid idea generation")
	fmt.Println("‚Ä¢ Shared knowledge created richer, more comprehensive solutions")
	fmt.Println("‚Ä¢ Diverse perspectives led to innovative and well-rounded approaches")
	fmt.Println("‚Ä¢ Qwen3:1.7b model proved effective for specialized agent roles")

	// Clear conversation
	breeze.Clear()
}

// Helper function to get agent role
func getAgentRole(agents []breeze.Agent, name string) string {
	for _, agent := range agents {
		if agent.Name == name {
			return agent.Role
		}
	}
	return "Unknown"
}

func main() {
	runQwen3MiniAgentsDemo()
}
